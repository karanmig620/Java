// instance variables
these are the variables that we create outside the class 
// we can also use the access specifier 
// cant use these in any other class or from anywhere as we are using private accessifier 
private int attributes = 1 ;
private int attributes = 2 ;
private int attributes = 4 ;

// how to call these instance variables from anywhere
// we use getters and setters
// getter:- create a method to get the values of instance variables of the class .
 // setters:- create a method to set the values of instance variables of the class .
 
  
 //access specifier must be public in order to get the value and no return type so 
 always use default data type
 
// how to call getters
 public int getarguments() {
 
 return arguments;
 }
 
// setters, we do have return type in setters so we will use void as the return type
and also we have to pass the parameters

public void setarguments(int arguments){
// we can use if/else statements here also in order to use the variables
if(arguments ==0){
return;
}
this.arguments = arguments;   //here this refers to the instance variable inorder to set the variables.
}

// constructors

constructors are by defalut there when we create a new object
// or simple words to initialize the object of that class, we can also make the default empty constructor as custom constructor

public Boxer (int arguments, int structures){    //(object name)
// initilise it here

this.arguments = arguments;
this.structures = structures;

}

// Static variables
related to all of the objects that we create out of the boxer/existing class also called shared variables.
we dont need to create a new object to change the value of variable.

//inheritence
It is a relationship between two classes and in java, class can only inherit from one class.
if we have private class then we cant access them 

//protected
only subclasses of class can access the attributes.
class that inherit from the fighter class can access the attributes.

//superclass
a superrclass is a class that inherit from another class in this case. (fighter class is the super class). (boxer is the sub class).

//methods or instace methods

returns string value
a code that does something
